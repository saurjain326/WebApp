node{
   stage('SCM Checkout'){
     git 'https://github.com/saurjain326/WebApp'
   }
     
   stage('SonarQube Analysis') {
        def mvnHome =  tool name: 'maven', type: 'maven'
        withSonarQubeEnv(credentialsId: 'sonarqubelocalC', installationName: 'sonarqubeC') { 
          sh "${mvnHome}/bin/mvn clean verify sonar:sonar -Dsonar.sources=. -Dsonar.tests=. -Dsonar.inclusions=**/test/java/servlet/createpage_junit.java -Dsonar.test.exclusions=**/test/java/servlet/createpage_junit.java -Dsonar.login=admin -Dsonar.password=admin"
        }
    }
	
	stage('Maven Build'){
        def mvnHome = tool name: 'maven', type: 'maven'
		sh "${mvnHome}/bin/mvn clean package"
   }
		
	stage('Deploy QA'){

		deploy adapters: [tomcat8(credentialsId: 'tomcat', path: '', url: 'http://3.14.88.11:8080/')], contextPath: 'QAWebapp', war: '**/*.war'
   
	}	
	
	
	stage('Deploy to Artifactory') {
		def server = Artifactory.server "sanidhyadev"
    		// Create an Artifactory Maven instance.
    		def rtMaven = Artifactory.newMavenBuild()
    		def buildInfo
 		// Tool name from Jenkins configuration
        	rtMaven.tool = "maven"
        	// Set Artifactory repositories for dependencies resolution and artifacts deployment.
        	rtMaven.deployer releaseRepo:'libs-release-local', snapshotRepo:'libs-snapshot-local', server: server
        	rtMaven.resolver releaseRepo:'libs-release', snapshotRepo:'libs-snapshot', server: server
		buildInfo = rtMaven.run pom: 'pom.xml', goals: 'clean install'
		server.publishBuildInfo buildInfo
    }
	
	stage ('Performace testing'){
    blazeMeterTest( credentialsId: 'BlazeMeter', testId: '7911015.taurus', workspaceId: '468385')
  }
	
}
